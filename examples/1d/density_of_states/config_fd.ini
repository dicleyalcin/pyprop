[Representation]
rank = 1
type = core.CombinedRepresentation_1
representation0 = "RadialRepresentation"

[RadialRepresentation]
type = core.CustomGridRepresentation
rank = 1
function = GetGridLinear
xmin = 0
xmax = 50.3
count = %(xmax)s / 0.5 - 1
include_left_boundary = False
include_right_boundary = False

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: x[0] * exp(-x[0])

[Propagation]
potential_evaluation = []
grid_potential_list = ["RadialKineticEnergy"]
propagator = PamPropagator
base_propagator = BasisPropagator
timestep = 0.01
duration = 10
krylov_basis_size = 10
krylov_tolerance = 1.0e-13
renormalization = False

[RadialKineticEnergy]
classname = "KineticEnergyPotential"
k = 5
geometry0 = "banded-5"
differentiation0 = 2
num_scale_pts = int((%(k)s - 1)*(%(k)s + 1)/8.0)
#boundary_scaling0 = array(range(%(num_scale_pts)s))
boundary_scaling0 = array([3.0,0,0])
offset0 = -2
mass = 1

[OverlapMatrixPotential]
classname = "KineticEnergyPotential"
geometry0 = "diagonal"
mass = -0.5 #pot = -1/2m => pot = 1
